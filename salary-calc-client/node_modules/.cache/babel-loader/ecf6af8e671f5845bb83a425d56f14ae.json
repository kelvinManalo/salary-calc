{"ast":null,"code":"export function birthDateMasking(val, prevVal) {\n  // Prevent non-digit characters being entered\n  if (isNaN(parseInt(val[val.length - 1], 10))) {\n    return val.slice(0, -1);\n  } // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\n\n\n  if (prevVal && prevVal.length >= val.length) {\n    return val;\n  } // Add / at appropriate sections of the input\n\n\n  if (val.length === 2 || val.length === 5) {\n    val += \"/\";\n  } // Prevent characters being entered after Dob is full\n\n\n  if (val.length >= 10) {\n    return val.slice(0, 10);\n  }\n\n  return val;\n}","map":{"version":3,"sources":["C:/Projects/ReactJS/salary-calc/salary-calc-client/src/validations/validations.js"],"names":["birthDateMasking","val","prevVal","isNaN","parseInt","length","slice"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,GAA1B,EAA+BC,OAA/B,EAAwC;AAC7C;AACA,MAAIC,KAAK,CAACC,QAAQ,CAACH,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAJ,EAAsB,EAAtB,CAAT,CAAT,EAA8C;AAC5C,WAAOJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAP;AACD,GAJ4C,CAM7C;;;AACA,MAAIJ,OAAO,IAAIA,OAAO,CAACG,MAAR,IAAkBJ,GAAG,CAACI,MAArC,EAA6C;AAC3C,WAAOJ,GAAP;AACD,GAT4C,CAW7C;;;AACA,MAAIA,GAAG,CAACI,MAAJ,KAAe,CAAf,IAAoBJ,GAAG,CAACI,MAAJ,KAAe,CAAvC,EAA0C;AACxCJ,IAAAA,GAAG,IAAI,GAAP;AACD,GAd4C,CAgB7C;;;AACA,MAAIA,GAAG,CAACI,MAAJ,IAAc,EAAlB,EAAsB;AACpB,WAAOJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAP;AACD;;AAED,SAAOL,GAAP;AACD","sourcesContent":["export function birthDateMasking(val, prevVal) {\r\n  // Prevent non-digit characters being entered\r\n  if (isNaN(parseInt(val[val.length - 1], 10))) {\r\n    return val.slice(0, -1);\r\n  }\r\n\r\n  // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\r\n  if (prevVal && prevVal.length >= val.length) {\r\n    return val;\r\n  }\r\n\r\n  // Add / at appropriate sections of the input\r\n  if (val.length === 2 || val.length === 5) {\r\n    val += \"/\";\r\n  }\r\n\r\n  // Prevent characters being entered after Dob is full\r\n  if (val.length >= 10) {\r\n    return val.slice(0, 10);\r\n  }\r\n\r\n  return val;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}