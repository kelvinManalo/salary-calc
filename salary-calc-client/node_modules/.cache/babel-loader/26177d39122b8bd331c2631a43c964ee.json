{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\ReactJS\\\\salary-calc\\\\salary-calc-client\\\\src\\\\Components\\\\Employee\\\\EmployeeAdd.js\";\nimport React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { createEmployee } from \"../../actions\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeAdd extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      console.log(formValues);\n\n      try {\n        const submitValues = {\n          name: `${formValues.lastName}, ${formValues.firstName} ${formValues.middleName}`,\n          birthdate: moment(formValues.birthDate, \"MM/DD/YYYY\", true).toISOString(),\n          tin: formValues.tin,\n          employeeType: parseInt(formValues.employeeType),\n          baseSalary: parseFloat(formValues).toFixed(2)\n        };\n        console.log(submitValues);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta,\n      placeholder\n    }) => {\n      const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          placeholder: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.birthDateMasking = (val, prevVal) => {\n      // Prevent non-digit characters being entered\n      if (isNaN(parseInt(val[val.length - 1], 10))) {\n        return val.slice(0, -1);\n      } // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\n\n\n      if (prevVal && prevVal.length >= val.length) {\n        return val;\n      } // Add / at appropriate sections of the input\n\n\n      if (val.length === 2 || val.length === 5) {\n        val += \"/\";\n      } // Prevent characters being entered after Dob is full\n\n\n      if (val.length >= 10) {\n        return val.slice(0, 10);\n      }\n\n      return val;\n    };\n\n    this.formatAmount = value => {\n      if (!value) return \"\";\n      const cleanedInput = value.replace(/,/g, \"\").replace(/PHP /g, \"\");\n      if (cleanedInput.length === 0) return \"\";\n\n      if (isNaN(parseInt(value[value.length - 1], 10))) {\n        return this.formatAmount(value.slice(0, -1));\n      }\n\n      const convertedInput = \"PHP \" + new Intl.NumberFormat().format(cleanedInput);\n      return convertedInput;\n    };\n\n    this.normalizeAmount = value => {\n      return value.replace(/,/g, \"\").replace(/PHP /g, \"\");\n    };\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        component: this.renderInput,\n        label: \"First Name\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"middleName\",\n        component: this.renderInput,\n        label: \"Middle Name\",\n        placeholder: \"Middle Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        component: this.renderInput,\n        label: \"Last Name\",\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"six wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"birthDate\",\n            component: this.renderInput,\n            label: \"Birth Date\",\n            placeholder: \"MM/DD/YYYY\",\n            normalize: this.birthDateMasking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"five wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"baseSalary\",\n            component: this.renderInput,\n            label: \"Base Salary\",\n            placeholder: \"Base Salary\",\n            format: this.formatAmount,\n            normalize: this.normalizeAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"five wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"tin\",\n            component: this.renderInput,\n            label: \"TIN\",\n            placeholder: \"TIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Employmee Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"employeeType\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contractual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"employeeType\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Regular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui floated button violet\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = \"You must enter a first name\";\n  }\n\n  if (!formValues.lastName) {\n    errors.lastName = \"You must enter a last name\";\n  }\n\n  if (!formValues.middleName) {\n    errors.middleName = \"You must enter a middle name\";\n  }\n\n  const validDate = moment(formValues.birthDate, \"MM/DD/YYYY\", true).isValid();\n\n  if (validDate) {\n    if (new Date(formValues.birthDate) > new Date()) {\n      errors.birthDate = \"Cannot be future dated\";\n    }\n  } else {\n    errors.birthDate = \"Invalid date\";\n  }\n\n  if (!formValues.employeeType) {\n    errors.employeeType = \"You must enter an employee type\";\n  }\n\n  if (!formValues.baseSalary) {}\n\n  return errors;\n};\n\nconst wrapComponent = reduxForm({\n  form: \"EmployeeAdd\",\n  validate\n})(EmployeeAdd); //connect\n\nexport default connect(null, {\n  createEmployee\n})(wrapComponent);","map":{"version":3,"sources":["C:/Projects/ReactJS/salary-calc/salary-calc-client/src/Components/Employee/EmployeeAdd.js"],"names":["React","Field","reduxForm","connect","createEmployee","moment","EmployeeAdd","Component","onSubmit","formValues","console","log","submitValues","name","lastName","firstName","middleName","birthdate","birthDate","toISOString","tin","employeeType","parseInt","baseSalary","parseFloat","toFixed","error","renderInput","input","label","meta","placeholder","className","touched","renderError","birthDateMasking","val","prevVal","isNaN","length","slice","formatAmount","value","cleanedInput","replace","convertedInput","Intl","NumberFormat","format","normalizeAmount","render","props","handleSubmit","validate","errors","validDate","isValid","Date","wrapComponent","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEmployee } from \"../../actions\";\r\nimport moment from \"moment\";\r\n\r\nclass EmployeeAdd extends React.Component {\r\n  onSubmit = (formValues) => {\r\n    console.log(formValues);\r\n    try {\r\n      const submitValues = {\r\n        name: `${formValues.lastName}, ${formValues.firstName} ${formValues.middleName}`,\r\n        birthdate: moment(\r\n          formValues.birthDate,\r\n          \"MM/DD/YYYY\",\r\n          true\r\n        ).toISOString(),\r\n        tin: formValues.tin,\r\n        employeeType: parseInt(formValues.employeeType),\r\n        baseSalary: parseFloat(formValues).toFixed(2),\r\n      };\r\n\r\n      console.log(submitValues);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"content\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta, placeholder }) => {\r\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} placeholder={placeholder} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  birthDateMasking = (val, prevVal) => {\r\n    // Prevent non-digit characters being entered\r\n    if (isNaN(parseInt(val[val.length - 1], 10))) {\r\n      return val.slice(0, -1);\r\n    }\r\n\r\n    // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\r\n    if (prevVal && prevVal.length >= val.length) {\r\n      return val;\r\n    }\r\n\r\n    // Add / at appropriate sections of the input\r\n    if (val.length === 2 || val.length === 5) {\r\n      val += \"/\";\r\n    }\r\n\r\n    // Prevent characters being entered after Dob is full\r\n    if (val.length >= 10) {\r\n      return val.slice(0, 10);\r\n    }\r\n\r\n    return val;\r\n  };\r\n\r\n  formatAmount = (value) => {\r\n    if (!value) return \"\";\r\n\r\n    const cleanedInput = value.replace(/,/g, \"\").replace(/PHP /g, \"\");\r\n\r\n    if (cleanedInput.length === 0) return \"\";\r\n\r\n    if (isNaN(parseInt(value[value.length - 1], 10))) {\r\n      return this.formatAmount(value.slice(0, -1));\r\n    }\r\n\r\n    const convertedInput =\r\n      \"PHP \" + new Intl.NumberFormat().format(cleanedInput);\r\n\r\n    return convertedInput;\r\n  };\r\n\r\n  normalizeAmount = (value) => {\r\n    return value.replace(/,/g, \"\").replace(/PHP /g, \"\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form error\"\r\n        autoComplete=\"off\"\r\n      >\r\n        <Field\r\n          name=\"firstName\"\r\n          component={this.renderInput}\r\n          label=\"First Name\"\r\n          placeholder=\"First Name\"\r\n        />\r\n        <Field\r\n          name=\"middleName\"\r\n          component={this.renderInput}\r\n          label=\"Middle Name\"\r\n          placeholder=\"Middle Name\"\r\n        />\r\n        <Field\r\n          name=\"lastName\"\r\n          component={this.renderInput}\r\n          label=\"Last Name\"\r\n          placeholder=\"Last Name\"\r\n        />\r\n\r\n        <div className=\"two fields\">\r\n          <div className=\"six wide field\">\r\n            <Field\r\n              name=\"birthDate\"\r\n              component={this.renderInput}\r\n              label=\"Birth Date\"\r\n              placeholder=\"MM/DD/YYYY\"\r\n              normalize={this.birthDateMasking}\r\n            />\r\n          </div>\r\n          <div className=\"five wide field\">\r\n            <Field\r\n              name=\"baseSalary\"\r\n              component={this.renderInput}\r\n              label=\"Base Salary\"\r\n              placeholder=\"Base Salary\"\r\n              format={this.formatAmount}\r\n              normalize={this.normalizeAmount}\r\n            />\r\n          </div>\r\n          <div className=\"five wide field\">\r\n            <Field\r\n              name=\"tin\"\r\n              component={this.renderInput}\r\n              label=\"TIN\"\r\n              placeholder=\"TIN\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"inline fields\">\r\n          <label>Employmee Type:</label>\r\n          <div className=\"field\">\r\n            <Field\r\n              name=\"employeeType\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"1\"\r\n            />\r\n            <label>Contractual</label>\r\n          </div>\r\n          <div className=\"field\">\r\n            <Field\r\n              name=\"employeeType\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"2\"\r\n            />\r\n            <label>Regular</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extra content\">\r\n          <button className=\"ui floated button violet\">Submit</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"You must enter a first name\";\r\n  }\r\n\r\n  if (!formValues.lastName) {\r\n    errors.lastName = \"You must enter a last name\";\r\n  }\r\n\r\n  if (!formValues.middleName) {\r\n    errors.middleName = \"You must enter a middle name\";\r\n  }\r\n\r\n  const validDate = moment(formValues.birthDate, \"MM/DD/YYYY\", true).isValid();\r\n\r\n  if (validDate) {\r\n    if (new Date(formValues.birthDate) > new Date()) {\r\n      errors.birthDate = \"Cannot be future dated\";\r\n    }\r\n  } else {\r\n    errors.birthDate = \"Invalid date\";\r\n  }\r\n\r\n  if (!formValues.employeeType) {\r\n    errors.employeeType = \"You must enter an employee type\";\r\n  }\r\n\r\n  if (!formValues.baseSalary) {\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst wrapComponent = reduxForm({\r\n  form: \"EmployeeAdd\",\r\n  validate,\r\n})(EmployeeAdd);\r\n\r\n//connect\r\n\r\nexport default connect(null, { createEmployee })(wrapComponent);\r\n"]},"metadata":{},"sourceType":"module"}