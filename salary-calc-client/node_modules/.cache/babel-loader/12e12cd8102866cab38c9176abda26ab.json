{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\ReactJS\\\\salary-calc\\\\salary-calc-client\\\\src\\\\Components\\\\Employee\\\\EmployeeAdd.js\";\nimport React from \"react\";\nimport { reset, Field, reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { createEmployee } from \"../../actions\";\nimport moment from \"moment\";\nimport { birthDateMasking, formatAmountRF, normalizeAmountRF } from \"../../validations/validations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeAdd extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = (formValues, dispatch) => {\n      const {\n        lastName,\n        firstName,\n        middleName,\n        birthDate,\n        tin,\n        employeeType,\n        baseSalary\n      } = formValues;\n      const submitValues = {\n        name: `${lastName}, ${firstName} ${middleName[0]}.`,\n        birthdate: moment(birthDate, \"MM/DD/YYYY\", true).toISOString(),\n        tin: tin,\n        employeeType: parseInt(employeeType),\n        baseSalary: parseFloat(baseSalary).toFixed(2)\n      };\n      this.props.createEmployee(submitValues);\n      dispatch(reset(\"EmployeeAdd\"));\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta,\n      placeholder\n    }) => {\n      const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          placeholder: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), this.renderError(meta)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    // Assign fetchProducts into your Component\n    this.birthDateMasking = birthDateMasking.bind(this);\n    this.formatAmountRF = formatAmountRF.bind(this);\n    this.normalizeAmountRF = normalizeAmountRF.bind(this);\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (touched && error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui pointing red basic label\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        component: this.renderInput,\n        label: \"First Name\",\n        placeholder: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"middleName\",\n        component: this.renderInput,\n        label: \"Middle Name\",\n        placeholder: \"Middle Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        component: this.renderInput,\n        label: \"Last Name\",\n        placeholder: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"two fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"six wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"birthDate\",\n            component: this.renderInput,\n            label: \"Birth Date\",\n            placeholder: \"MM/DD/YYYY\",\n            normalize: this.birthDateMasking\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"five wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"baseSalary\",\n            component: this.renderInput,\n            label: \"Base Salary\",\n            placeholder: \"Base Salary\",\n            format: this.formatAmountRF,\n            normalize: this.normalizeAmountRF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"five wide field\",\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            name: \"tin\",\n            component: this.renderInput,\n            label: \"TIN\",\n            placeholder: \"TIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Employmee Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"employeeType\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Contractual\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"employeeType\",\n            component: \"input\",\n            type: \"radio\",\n            value: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Regular\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra content\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui floated button violet\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.firstName) {\n    errors.firstName = \"You must enter a first name\";\n  }\n\n  if (!formValues.lastName) {\n    errors.lastName = \"You must enter a last name\";\n  }\n\n  if (!formValues.middleName) {\n    errors.middleName = \"You must enter a middle name\";\n  }\n\n  const validDate = moment(formValues.birthDate, \"MM/DD/YYYY\", true).isValid();\n\n  if (validDate) {\n    if (new Date(formValues.birthDate) > new Date()) {\n      errors.birthDate = \"Cannot be future dated\";\n    }\n  } else {\n    errors.birthDate = \"Invalid date\";\n  }\n\n  if (!formValues.employeeType) {\n    errors.employeeType = \"You must enter an employee type\";\n  }\n\n  if (!formValues.baseSalary) {\n    errors.baseSalary = \"You must enter a base salary.\";\n  }\n\n  return errors;\n};\n\nconst wrapComponent = reduxForm({\n  form: \"EmployeeAdd\",\n  validate\n})(EmployeeAdd);\nexport default connect(null, {\n  createEmployee\n})(wrapComponent);","map":{"version":3,"sources":["C:/Projects/ReactJS/salary-calc/salary-calc-client/src/Components/Employee/EmployeeAdd.js"],"names":["React","reset","Field","reduxForm","connect","createEmployee","moment","birthDateMasking","formatAmountRF","normalizeAmountRF","EmployeeAdd","Component","onSubmit","formValues","dispatch","lastName","firstName","middleName","birthDate","tin","employeeType","baseSalary","submitValues","name","birthdate","toISOString","parseInt","parseFloat","toFixed","props","renderInput","input","label","meta","placeholder","className","error","touched","renderError","componentDidMount","bind","render","handleSubmit","validate","errors","validDate","isValid","Date","wrapComponent","form"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { reset, Field, reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { createEmployee } from \"../../actions\";\r\nimport moment from \"moment\";\r\nimport {\r\n  birthDateMasking,\r\n  formatAmountRF,\r\n  normalizeAmountRF,\r\n} from \"../../validations/validations\";\r\n\r\nclass EmployeeAdd extends React.Component {\r\n  componentDidMount() {\r\n    // Assign fetchProducts into your Component\r\n    this.birthDateMasking = birthDateMasking.bind(this);\r\n    this.formatAmountRF = formatAmountRF.bind(this);\r\n    this.normalizeAmountRF = normalizeAmountRF.bind(this);\r\n  }\r\n\r\n  onSubmit = (formValues, dispatch) => {\r\n    const {\r\n      lastName,\r\n      firstName,\r\n      middleName,\r\n      birthDate,\r\n      tin,\r\n      employeeType,\r\n      baseSalary,\r\n    } = formValues;\r\n\r\n    const submitValues = {\r\n      name: `${lastName}, ${firstName} ${middleName[0]}.`,\r\n      birthdate: moment(birthDate, \"MM/DD/YYYY\", true).toISOString(),\r\n      tin: tin,\r\n      employeeType: parseInt(employeeType),\r\n      baseSalary: parseFloat(baseSalary).toFixed(2),\r\n    };\r\n\r\n    this.props.createEmployee(submitValues);\r\n    dispatch(reset(\"EmployeeAdd\"));\r\n  };\r\n\r\n  renderError({ error, touched }) {\r\n    if (touched && error) {\r\n      return <div className=\"ui pointing red basic label\">{error}</div>;\r\n    }\r\n  }\r\n\r\n  renderInput = ({ input, label, meta, placeholder }) => {\r\n    const className = `field ${meta.error && meta.touched ? \"error\" : \"\"}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} placeholder={placeholder} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form error\"\r\n        autoComplete=\"off\"\r\n      >\r\n        <Field\r\n          name=\"firstName\"\r\n          component={this.renderInput}\r\n          label=\"First Name\"\r\n          placeholder=\"First Name\"\r\n        />\r\n        <Field\r\n          name=\"middleName\"\r\n          component={this.renderInput}\r\n          label=\"Middle Name\"\r\n          placeholder=\"Middle Name\"\r\n        />\r\n        <Field\r\n          name=\"lastName\"\r\n          component={this.renderInput}\r\n          label=\"Last Name\"\r\n          placeholder=\"Last Name\"\r\n        />\r\n\r\n        <div className=\"two fields\">\r\n          <div className=\"six wide field\">\r\n            <Field\r\n              name=\"birthDate\"\r\n              component={this.renderInput}\r\n              label=\"Birth Date\"\r\n              placeholder=\"MM/DD/YYYY\"\r\n              normalize={this.birthDateMasking}\r\n            />\r\n          </div>\r\n          <div className=\"five wide field\">\r\n            <Field\r\n              name=\"baseSalary\"\r\n              component={this.renderInput}\r\n              label=\"Base Salary\"\r\n              placeholder=\"Base Salary\"\r\n              format={this.formatAmountRF}\r\n              normalize={this.normalizeAmountRF}\r\n            />\r\n          </div>\r\n          <div className=\"five wide field\">\r\n            <Field\r\n              name=\"tin\"\r\n              component={this.renderInput}\r\n              label=\"TIN\"\r\n              placeholder=\"TIN\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"inline fields\">\r\n          <label>Employmee Type:</label>\r\n          <div className=\"field\">\r\n            <Field\r\n              name=\"employeeType\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"1\"\r\n            />\r\n            <label>Contractual</label>\r\n          </div>\r\n          <div className=\"field\">\r\n            <Field\r\n              name=\"employeeType\"\r\n              component=\"input\"\r\n              type=\"radio\"\r\n              value=\"2\"\r\n            />\r\n            <label>Regular</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"extra content\">\r\n          <button className=\"ui floated button violet\">Submit</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.firstName) {\r\n    errors.firstName = \"You must enter a first name\";\r\n  }\r\n\r\n  if (!formValues.lastName) {\r\n    errors.lastName = \"You must enter a last name\";\r\n  }\r\n\r\n  if (!formValues.middleName) {\r\n    errors.middleName = \"You must enter a middle name\";\r\n  }\r\n\r\n  const validDate = moment(formValues.birthDate, \"MM/DD/YYYY\", true).isValid();\r\n\r\n  if (validDate) {\r\n    if (new Date(formValues.birthDate) > new Date()) {\r\n      errors.birthDate = \"Cannot be future dated\";\r\n    }\r\n  } else {\r\n    errors.birthDate = \"Invalid date\";\r\n  }\r\n\r\n  if (!formValues.employeeType) {\r\n    errors.employeeType = \"You must enter an employee type\";\r\n  }\r\n\r\n  if (!formValues.baseSalary) {\r\n    errors.baseSalary = \"You must enter a base salary.\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst wrapComponent = reduxForm({\r\n  form: \"EmployeeAdd\",\r\n  validate,\r\n})(EmployeeAdd);\r\n\r\nexport default connect(null, { createEmployee })(wrapComponent);\r\n"]},"metadata":{},"sourceType":"module"}