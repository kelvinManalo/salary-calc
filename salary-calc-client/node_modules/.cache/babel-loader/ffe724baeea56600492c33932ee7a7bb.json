{"ast":null,"code":"import employees from \"../apis/employees\";\nimport { FETCH_EMPLOYEES, FETCH_EMPLOYEE, CREATE_EMPLOYEE, CALCULATE_SALARY } from \"./types\";\nexport const fetchEmployees = () => async dispatch => {\n  try {\n    const response = await employees.get(\"/employee\");\n    dispatch({\n      type: FETCH_EMPLOYEES,\n      payload: response.data.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchEmployee = id => async dispatch => {\n  const response = await employees.get(`/employee/${id}`);\n\n  try {\n    dispatch({\n      type: FETCH_EMPLOYEE,\n      payload: response.data.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createEmployee = formValues => async dispatch => {\n  const response = await employees.post(\"/employee\", formValues);\n\n  if (response.data.success) {\n    dispatch({\n      type: CREATE_EMPLOYEE,\n      payload: response.data.data\n    });\n  } else {\n    //dispatch error handling action creator\n    console.log(response);\n  }\n};\nexport const calculateSalary = (id, formValues) => async dispatch => {\n  const response = await employees.put(`/employee/${id}`, formValues);\n\n  if (response.success) {\n    dispatch({\n      type: CALCULATE_SALARY,\n      payload: response.data.data\n    });\n  } else {\n    //dispatch error handling action creator\n    console.log(response.message);\n  }\n};","map":{"version":3,"sources":["C:/Projects/ReactJS/salary-calc/salary-calc-client/src/actions/index.js"],"names":["employees","FETCH_EMPLOYEES","FETCH_EMPLOYEE","CREATE_EMPLOYEE","CALCULATE_SALARY","fetchEmployees","dispatch","response","get","type","payload","data","error","console","log","fetchEmployee","id","createEmployee","formValues","post","success","calculateSalary","put","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,mBAAtB;AACA,SACEC,eADF,EAEEC,cAFF,EAGEC,eAHF,EAIEC,gBAJF,QAKO,SALP;AAOA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAV,CAAc,WAAd,CAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,eAAR;AAAyBS,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAAhD,KAAD,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AASP,OAAO,MAAMG,aAAa,GAAIC,EAAD,IAAQ,MAAOV,QAAP,IAAoB;AACvD,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,GAAV,CAAe,aAAYQ,EAAG,EAA9B,CAAvB;;AAEA,MAAI;AACFV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,cAAR;AAAwBQ,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAA/C,KAAD,CAAR;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM;AAUP,OAAO,MAAMK,cAAc,GAAIC,UAAD,IAAgB,MAAOZ,QAAP,IAAoB;AAChE,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACmB,IAAV,CAAe,WAAf,EAA4BD,UAA5B,CAAvB;;AAEA,MAAIX,QAAQ,CAACI,IAAT,CAAcS,OAAlB,EAA2B;AACzBd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,eAAR;AAAyBO,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAAhD,KAAD,CAAR;AACD,GAFD,MAEO;AACL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;AACF,CATM;AAWP,OAAO,MAAMc,eAAe,GAAG,CAACL,EAAD,EAAKE,UAAL,KAAoB,MAAOZ,QAAP,IAAoB;AACrE,QAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACsB,GAAV,CAAe,aAAYN,EAAG,EAA9B,EAAiCE,UAAjC,CAAvB;;AAEA,MAAIX,QAAQ,CAACa,OAAb,EAAsB;AACpBd,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEL,gBAAR;AAA0BM,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAAjD,KAAD,CAAR;AACD,GAFD,MAEO;AACL;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACgB,OAArB;AACD;AACF,CATM","sourcesContent":["import employees from \"../apis/employees\";\r\nimport {\r\n  FETCH_EMPLOYEES,\r\n  FETCH_EMPLOYEE,\r\n  CREATE_EMPLOYEE,\r\n  CALCULATE_SALARY,\r\n} from \"./types\";\r\n\r\nexport const fetchEmployees = () => async (dispatch) => {\r\n  try {\r\n    const response = await employees.get(\"/employee\");\r\n    dispatch({ type: FETCH_EMPLOYEES, payload: response.data.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchEmployee = (id) => async (dispatch) => {\r\n  const response = await employees.get(`/employee/${id}`);\r\n\r\n  try {\r\n    dispatch({ type: FETCH_EMPLOYEE, payload: response.data.data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createEmployee = (formValues) => async (dispatch) => {\r\n  const response = await employees.post(\"/employee\", formValues);\r\n\r\n  if (response.data.success) {\r\n    dispatch({ type: CREATE_EMPLOYEE, payload: response.data.data });\r\n  } else {\r\n    //dispatch error handling action creator\r\n    console.log(response);\r\n  }\r\n};\r\n\r\nexport const calculateSalary = (id, formValues) => async (dispatch) => {\r\n  const response = await employees.put(`/employee/${id}`, formValues);\r\n\r\n  if (response.success) {\r\n    dispatch({ type: CALCULATE_SALARY, payload: response.data.data });\r\n  } else {\r\n    //dispatch error handling action creator\r\n    console.log(response.message);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}