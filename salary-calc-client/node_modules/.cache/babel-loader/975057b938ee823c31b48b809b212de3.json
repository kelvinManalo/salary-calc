{"ast":null,"code":"const validations = {\n  birthDateMasking: function (val, prevVal) {\n    // Prevent non-digit characters being entered\n    if (isNaN(parseInt(val[val.length - 1], 10))) {\n      return val.slice(0, -1);\n    } // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\n\n\n    if (prevVal && prevVal.length >= val.length) {\n      return val;\n    } // Add / at appropriate sections of the input\n\n\n    if (val.length === 2 || val.length === 5) {\n      val += \"/\";\n    } // Prevent characters being entered after Dob is full\n\n\n    if (val.length >= 10) {\n      return val.slice(0, 10);\n    }\n\n    return val;\n  }\n};\nexport default birthDateMasking;","map":{"version":3,"sources":["C:/Projects/ReactJS/salary-calc/salary-calc-client/src/validations/validations.js"],"names":["validations","birthDateMasking","val","prevVal","isNaN","parseInt","length","slice"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAClBC,EAAAA,gBAAgB,EAAE,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACxC;AACA,QAAIC,KAAK,CAACC,QAAQ,CAACH,GAAG,CAACA,GAAG,CAACI,MAAJ,GAAa,CAAd,CAAJ,EAAsB,EAAtB,CAAT,CAAT,EAA8C;AAC5C,aAAOJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAP;AACD,KAJuC,CAMxC;;;AACA,QAAIJ,OAAO,IAAIA,OAAO,CAACG,MAAR,IAAkBJ,GAAG,CAACI,MAArC,EAA6C;AAC3C,aAAOJ,GAAP;AACD,KATuC,CAWxC;;;AACA,QAAIA,GAAG,CAACI,MAAJ,KAAe,CAAf,IAAoBJ,GAAG,CAACI,MAAJ,KAAe,CAAvC,EAA0C;AACxCJ,MAAAA,GAAG,IAAI,GAAP;AACD,KAduC,CAgBxC;;;AACA,QAAIA,GAAG,CAACI,MAAJ,IAAc,EAAlB,EAAsB;AACpB,aAAOJ,GAAG,CAACK,KAAJ,CAAU,CAAV,EAAa,EAAb,CAAP;AACD;;AAED,WAAOL,GAAP;AACD;AAvBiB,CAApB;AA0BA,eAAeD,gBAAf","sourcesContent":["const validations = {\r\n  birthDateMasking: function (val, prevVal) {\r\n    // Prevent non-digit characters being entered\r\n    if (isNaN(parseInt(val[val.length - 1], 10))) {\r\n      return val.slice(0, -1);\r\n    }\r\n\r\n    // When user is deleting, this prevents immediate re-addition of '/' when it's deleted\r\n    if (prevVal && prevVal.length >= val.length) {\r\n      return val;\r\n    }\r\n\r\n    // Add / at appropriate sections of the input\r\n    if (val.length === 2 || val.length === 5) {\r\n      val += \"/\";\r\n    }\r\n\r\n    // Prevent characters being entered after Dob is full\r\n    if (val.length >= 10) {\r\n      return val.slice(0, 10);\r\n    }\r\n\r\n    return val;\r\n  },\r\n};\r\n\r\nexport default birthDateMasking;\r\n"]},"metadata":{},"sourceType":"module"}